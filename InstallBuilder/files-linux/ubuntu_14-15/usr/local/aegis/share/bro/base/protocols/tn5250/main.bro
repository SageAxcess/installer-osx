##! Implements base functionality for TDS analysis.
##! Generates the Tds.log file.

# Generated by binpac_quickstart

#@load base/frameworks/logging/writers/zmq

@load ./consts

module TN5250;

export {
	redef enum Log::ID += { LOG, LOG2, Z_LOG };

	type Info: record {
		## Timestamp for when the event happened.
		ts:		time    &log;
		## Unique ID for the connection.
		uid:		string  &log;
		## The connection's 4-tuple of endpoint addresses/ports.
		id:		conn_id &log;
                protocol:	string &log &default="TELNET";
		details:	string &log  &default="";

		local_user:	string &log &default="";
		process:	string &log &default="";
	};

	## Event that can be handled to access the TDS record as it is sent on
	## to the loggin framework.
	global log_tn5250: event(rec: Info);
}

const ports = { 23/tcp };

redef record connection += {
	tn5250: TN5250::Info &optional;
};

redef record LogZMQ::Info += {
	tn5250: Info &log &optional;
};

function write_log(info: Info)
	{
        Log::write(TN5250::LOG, info);

#	when ( local src_host = lookup_addr(info$id$orig_h) )
#		{
		local s: LogZMQ::Info = [$ptype="tn5250", $is_proto=T, $ts=info$ts, $uid=info$uid, $username=info$local_user, $process=info$process];

		s$tn5250 = info;

		Log::write(TN5250::Z_LOG, s);
#		}
	}

event bro_init() &priority=5
	{
	Log::create_stream(TN5250::LOG, [$columns=Info, $ev=log_tn5250, $path="tn5250"]);

	Log::create_stream(TN5250::Z_LOG, [$columns=LogZMQ::Info, $path="z-tn5250"]);
        Log::remove_default_filter(TN5250::Z_LOG);
	local filter: Log::Filter = [$name="zmq", $writer=Log::WRITER_ZMQ];
	Log::add_filter(TN5250::Z_LOG, filter);

	Analyzer::register_for_ports(Analyzer::ANALYZER_TN5250, ports);
	}

function describe_command(command: count, option: count, data: string): string
	{
	local s: string;

	return s;
	}


event telnet_command(c: connection, command: count, option: count, data: string)
	{
		if ( ! c?$tn5250 )
		{
		        if( !c?$conn ) {
		            local x: Conn::Info;
	        	    c$conn = x;
		        }
			c$conn$service="tn5250";

			local s: Info;
			c$tn5250 = s;

			c$tn5250$local_user=c?$local_user ? c$local_user : "";
			c$tn5250$process=c?$process ? c$process : "";
		}
		c$tn5250$ts  = network_time();
		c$tn5250$uid = c$uid;
		c$tn5250$id  = c$id;

		c$tn5250$protocol = "TELNET";
		if(command==250) { 
			c$tn5250$details = fmt("IAC(%d) %s %s: %s", command, telnet_commands[command], telnet_options[option], data);
		} else if(command>250) {
			c$tn5250$details = fmt("IAC(%d) %s %s", command, telnet_commands[command], telnet_options[option]);
		} else {
			c$tn5250$details = fmt("IAC(%d) %s", command, telnet_commands[command]);
		}

		write_log(c$tn5250);
	}

event telnet_text(c: connection, text: string)
	{
		if ( ! c?$tn5250 )
		{
		        if( !c?$conn ) {
		            local x: Conn::Info;
	        	    c$conn = x;
		        }
			c$conn$service="tn5250";

			local s: Info;
			c$tn5250 = s;

			c$tn5250$local_user=c?$local_user ? c$local_user : "";
			c$tn5250$process=c?$process ? c$process : "";
		}
		c$tn5250$ts  = network_time();
		c$tn5250$uid = c$uid;
		c$tn5250$id  = c$id;

		c$tn5250$protocol = "TELNET";
		c$tn5250$details = fmt("> %s", text);

		write_log(c$tn5250);
	}

event tn5250_command(c: connection, command: count)
	{
		if ( ! c?$tn5250 )
		{
		        if( !c?$conn ) {
		            local x: Conn::Info;
	        	    c$conn = x;
		        }
			c$conn$service="tn5250";

			local s: Info;
			c$tn5250 = s;

			c$tn5250$local_user=c?$local_user ? c$local_user : "";
			c$tn5250$process=c?$process ? c$process : "";
		}
		c$tn5250$ts  = network_time();
		c$tn5250$uid = c$uid;
		c$tn5250$id  = c$id;

		c$tn5250$protocol = "TN5250";
		c$tn5250$details = tn5250_commands[command];

		write_log(c$tn5250);
	}

event tn5250_write(c: connection, command: count, text: string)
	{
		if ( ! c?$tn5250 )
		{
		        if( !c?$conn ) {
		            local x: Conn::Info;
	        	    c$conn = x;
		        }
			c$conn$service="tn5250";

			local s: Info;
			c$tn5250 = s;

			c$tn5250$local_user=c?$local_user ? c$local_user : "";
			c$tn5250$process=c?$process ? c$process : "";
		}
		c$tn5250$ts  = network_time();
		c$tn5250$uid = c$uid;
		c$tn5250$id  = c$id;

		c$tn5250$protocol = "TN5250";
		c$tn5250$details = fmt("%s(%s)", tn5250_ops[command], text);

		write_log(c$tn5250);
	}
